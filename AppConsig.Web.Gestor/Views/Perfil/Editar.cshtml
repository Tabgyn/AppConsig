@using AppConsig.Web.Base.Entidades
@using AppConsig.Web.Base.Helpers
@model AppConsig.Entidades.Perfil
@{
    ViewBag.Title = Html.MvcSiteMap().SiteMap.CurrentNode.Title;
    ViewBag.Description = Html.MvcSiteMap().SiteMap.CurrentNode.Description;
}

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="widget">
            <div class="widget-body">
                @using (Html.BeginForm("Editar", "Perfil", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Nome, new {@class = "control-label"})
                        @Html.TextBoxFor(m => m.Nome, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Nome, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Descricao, new {@class = "control-label"})
                        @Html.TextBoxFor(m => m.Descricao, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Descricao, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Permissoes, new {@class = "control-label"})
                        <div id="tree">
                            @Html.TreeView(@ViewBag.Permissoes as List<TreeViewNode>).EmptyContent("").Children(m => m.Filhos).HtmlAttributes(new {id = "treeList"}).ChildrenHtmlAttributes(new {@class = "subItem"}).ItemText(m => m.Texto).ItemTemplate(@<div class="checkbox"><label><input id="@Html.Raw("ckb-" + item.Id)" name="ckbPermissoes" type="checkbox" value="@item.Id" @Html.Raw(item.Selecionado ? "checked" : "")><span class="text">@item.Texto</span></label></div>)
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        @Html.ActionLink("Voltar", "Index", null, new {@class = "btn btn-link"})
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section PageStyles{
    <link href="~/Content/jstree/style.css" rel="stylesheet" type="text/css" />
}

@section PageScripts{
    <script src="~/Scripts/jstree.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#tree').jstree({
                "core" : {
                    "expand_selected_onload" : true
                },
                "themes": {
                    "theme" : "default",
                    "dots" : false
                }
            });
        });

        $('li :checkbox').on('click', function () {
            var $chk = $(this),
                $li = $chk.closest('li'),
                $ul, $parent;

            //check all children nodes
            if ($li.has('ul')) {
                $li.find(':checkbox').not(this).prop('checked', this.checked);
                if ($chk.is(':checked')) {
                    if ($li.is('.jstree-closed')) {
                        $li.removeClass('jstree-closed').addClass('jstree-open');
                        $li.find('.jstree-closed').removeClass('jstree-closed').addClass('jstree-open');
                    }
                }
            }
            //check all parents nodes
            do {
                $ul = $li.parent();
                $parent = $ul.siblings().find(':checkbox');
                $parent.prop('checked', $ul.find(':checkbox:checked').length > 0);
                $chk = $parent;
                $li = $chk.closest('li');
            } while ($ul.is(':not(.jstree-no-dots)'));
        });
    </script>
}